const { ethers } = require("hardhat");
const fs = require('fs');
	
async function main(){
    const [deployer] = await ethers.getSigners();
    console.log("Deploying contracts with the account: ", deployer.address);

    console.log("Account balance: ", (await deployer.getBalance()).toString());


    // Deploy the contract to Ethereum test network - Ropsten
    const provider = ethers.providers.getDefaultProvider('ropsten')

    // Use your wallet's private key to deploy the contract
    const privateKey = '0xf214f2b2cd398c806f84e317254e0f0b801d0643303237d97a22a48e01628897'
    const wallet = new ethers.Wallet(privateKey, provider)

    // Read the contract artifact, which was generated by Remix
    const metadata = JSON.parse(fs.readFileSync('artifacts/contracts/SafeBox.sol/SafeBox.json').toString())

    // const price = ethers.utils.formatUnits(await provider.getGasPrice(), 'gwei')
    const options = {address: '0x90f79bf6eb2c4f870365e785982e1f101e93b906', name: 'Ethereum', symbol: 'ETH'}
    // gasPrice: ethers.utils.parseUnits(price, 'gwei')

    // Deploy the contract
    const factory = new ethers.ContractFactory(metadata.abi, metadata.bytecode, wallet)
    const contract = await factory.deploy(options.address, options.name, options.symbol, 
            {gasLimit: 50, maxFeePerGas: 25, maxPriorityFeePerGas: 20})
    await contract.deployed()
    console.log(`Deployment successful! Contract Address: ${contract.address}`)

    //const transaction = await contract.deposit(100); 
    //console.log(" address: ", transaction);

}

main()  
    .then(() => process.exit(0))
    .catch((error) => {
        console.error(error);
        process.exit(1)
});