const { ethers } = require("hardhat");
const fs = require('fs');
	
async function main(){
    const [deployer] = await ethers.getSigners();
    console.log("Deploying contracts with the account: ", deployer.address);

    console.log("Account balance: ", (await deployer.getBalance()).toString());


    // Deploy the contract to Ethereum test network - Ropsten
    const provider = ethers.providers.getDefaultProvider('ropsten')

    // Use your wallet's private key to deploy the contract
    const privateKey = '0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80'
    const wallet = new ethers.Wallet(privateKey, provider)

    // Read the contract artifact, which was generated by Remix
    const metadata = JSON.parse(fs.readFileSync('artifacts/contracts/SafeBox.sol/SafeBox.json').toString())

    const price = ethers.utils.formatUnits(await provider.getGasPrice(), 'gwei')
    const gasPrice = ethers.utils.parseUnits(price, 'gwei')
    console.log('price'+gasPrice)
    const options = {address: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266', name: 'Ethereum', symbol: 'ETH'}

    //const block = await ethers.provider.getBlock()
    //console.log(block)
    
    //const SafeBoxETH = await ethers.getContractFactory("SafeBoxETH");
    //console.log(JSON.stringify(SafeBoxETH))
    //const deployedContract = await SafeBoxETH.deploy(options.address, options.name, options.symbol);
    //console.log(JSON.stringify(deployedContract))

    /*
    // Deploy the contract
    const factory = new ethers.ContractFactory(metadata.abi, metadata.bytecode, wallet)
    const contract = await factory.deploy(options.address, options.name, options.symbol,
        {gasLimit: 1500000100})
    await contract.deployed()
    console.log(`Deployment successful! Contract Address: ${contract.address}`)

    const transaction = await contract.deposit(100); 
    console.log(" address: ", transaction);
    */

    var contract = new ethers.Contract(options.address,metadata.abi,wallet, {gasLimit: 2528970010})
    //console.log(contract)
    const transaction = await contract.deposit(10)
    console.log(transaction)
    const transaction2 = await contract.withdraw(100)
    console.log('withdrawing...')
    console.log(transaction2)
}

main()  
    .then(() => process.exit(0))
    .catch((error) => {
        console.error(error);
        process.exit(1)
});